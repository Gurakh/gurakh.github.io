---
import { getCollection } from "astro:content";

import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const projects = (await getCollection("projects")).sort(
    (a, b) => a.data.order - b.data.order
  );

  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { currentProject: project, projects },
  }));
}

const { currentProject, projects } = Astro.props;
const { Content } = await currentProject.render();
---

<Layout title={`Project: ${currentProject.data.title}`}>
 <a href="/" class="uppercase text-xs flex items-center space-x-1"><span>‚Üê</span><span>Back</span></a>
  <h1 class="font-serif text-4xl">{currentProject.data.title}</h1>
  <p class="font-mono uppercase text-xs">{currentProject.data.subtitle}</p>
  {currentProject.data.website && (<p class="mt-6">
    <a class="flex items-center space-x-1" href={currentProject.data.website} target="_blank">
      <span class="text-xs font-mono uppercase">see website</span>
      <svg class="w-3 h-3 dark:fill-secondary" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M22 12v9a1 1 0 0 1-1 1H3a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h9a1 1 0 0 1 0 2H4v16h16v-8a1 1 0 0 1 2 0Zm-.618-9.923A.991.991 0 0 0 21 2h-5a1 1 0 0 0 0 2h2.586l-7.293 7.293a1 1 0 1 0 1.414 1.414L20 5.414V8a1 1 0 0 0 2 0V3a1.01 1.01 0 0 0-.077-.382 1 1 0 0 0-.541-.541Z"/></svg>
    </a>
  </p>)}
  <div class="prose prose-li:marker:text-primary dark:prose-li:marker:text-secondary dark:text-white dark:prose-headings:text-secondary mt-4">
    <Content />
    <hr class="my-4">
  </div>
  <div>
    <ul>
      {
        projects.map((project) => (
          <li class="text-md font-mono uppercase py-1 mb-2 md:mb-0">
            {project.slug !== currentProject.slug && (
              <a
                class="uppercase hover:underline underline-offset-4"
                href={`/projects/${project.slug}`}
              >
                {project.data.title}
              </a>
              <span class="block text-xs md:inline">{project.data.subtitle}</span>
            )}
            {project.slug === currentProject.slug && (
              <span class="uppercase line-through">{project.data.title}</span>
            )}
          </li>
        ))
      }
    </ul>
  </div>
</Layout>
